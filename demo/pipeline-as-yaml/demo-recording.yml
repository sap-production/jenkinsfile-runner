# The configurations that used for the recording, feel free to edit them
config:

  # Specify a command to be executed
  # like `/bin/bash -l`, `ls`, or any other commands
  # the default is bash for Linux
  # or powershell.exe for Windows
  command: powershell.exe
  
  # Specify the current working directory path
  # the default is the current working directory path
  cwd: C:\Users\Oleg\Documents\jenkins\jfr\jenkinsfile-runner\demo\pipeline-as-yaml
  
  # Export additional ENV variables
  env:
    recording: true
  
  # Explicitly set the number of columns
  # or use `auto` to take the current
  # number of columns of your shell
  cols: 81
  
  # Explicitly set the number of rows
  # or use `auto` to take the current
  # number of rows of your shell
  rows: 20
  
  # Amount of times to repeat GIF
  # If value is -1, play once
  # If value is 0, loop indefinitely
  # If value is a positive number, loop n times
  repeat: 0
  
  # Quality
  # 1 - 100
  quality: 100
  
  # Delay between frames in ms
  # If the value is `auto` use the actual recording delays
  frameDelay: auto
  
  # Maximum delay between frames in ms
  # Ignored if the `frameDelay` isn't set to `auto`
  # Set to `auto` to prevent limiting the max idle time
  maxIdleTime: 2000
  
  # The surrounding frame box
  # The `type` can be null, window, floating, or solid`
  # To hide the title use the value null
  # Don't forget to add a backgroundColor style with a null as type
  frameBox:
    type: floating
    title: Terminalizer
    style:
      border: 0px black solid
      # boxShadow: none
      # margin: 0px
  
  # Add a watermark image to the rendered gif
  # You need to specify an absolute path for
  # the image on your machine or a URL, and you can also
  # add your own CSS styles
  watermark:
    imagePath: null
    style:
      position: absolute
      right: 15px
      bottom: 15px
      width: 100px
      opacity: 0.9
  
  # Cursor style can be one of
  # `block`, `underline`, or `bar`
  cursorStyle: block
  
  # Font family
  # You can use any font that is installed on your machine
  # in CSS-like syntax
  fontFamily: "Monaco, Lucida Console, Ubuntu Mono, Monospace"
  
  # The size of the font
  fontSize: 12
  
  # The height of lines
  lineHeight: 1
  
  # The spacing between letters
  letterSpacing: 0
  
  # Theme
  theme:
    background: "transparent"
    foreground: "#afafaf"
    cursor: "#c7c7c7"
    black: "#232628"
    red: "#fc4384"
    green: "#b3e33b"
    yellow: "#ffa727"
    blue: "#75dff2"
    magenta: "#ae89fe"
    cyan: "#708387"
    white: "#d5d5d0"
    brightBlack: "#626566"
    brightRed: "#ff7fac"
    brightGreen: "#c8ed71"
    brightYellow: "#ebdf86"
    brightBlue: "#75dff2"
    brightMagenta: "#ae89fe"
    brightCyan: "#b1c6ca"
    brightWhite: "#f9f9f4"
  
# Records, feel free to edit them
records:
  - delay: 789
    content: "\e[0m\e[0K"
  - delay: 258
    content: "\e]0;onenashev@LAPTOP-JFR-DEMO: /c/Users/Oleg/Documents/jenkins/jfr/jenkinsfile-runner/demo/pipeline-as-yaml\a\e[0;32;92monenashev@LAPTOP-JFR-DEMO\e[0m:\e[0;34;94m/c/Users/Oleg/Documents/jenkins/jfr/jenkinsfile-runner\e[0K\e[?25l\r\ndemo/pipeline-as-yaml\e[0m$\e[0K\e[24G\e[?25h"
  - delay: 1465
    content: "\e[?25l\r\e[0;34;94mdemo/pipeline-as-yaml\e[0m$ l\e[0K\e[?25h"
  - delay: 180
    content: "s\e[0K"
  - delay: 570
    content: "\e[?25l\r\n\e[0K\e[?25h"
  - delay: 25
    content: "\e[0;32;92mJenkinsfile.yml\e[0m  \e[0;32;92mREADME.md\e[0m  \e[0;32;92mdemo.yml\e[0m\e[0K\e[?25l\r\n\e[0;32;92monenashev@LAPTOP-JFR-DEMO\e[0m:\e[0;34;94m/c/Users/Oleg/Documents/jenkins/jfr/jenkinsfile-runner\e[0K/\r\ndemo/pipeline-as-yaml\e[0m$\e[0K\e[24G\e[?25h"
  - delay: 1505
    content: "\e[?25l\r\e[0;34;94mdemo/pipeline-as-yaml\e[0m$ c\e[0K\e[?25h"
  - delay: 98
    content: "a\e[0K"
  - delay: 123
    content: "t\e[0K"
  - delay: 96
    content: "\e[28G"
  - delay: 684
    content: "\e[?25l\r\e[0;34;94mdemo/pipeline-as-yaml\e[0m$ cat J\e[0K\e[?25h"
  - delay: 160
    content: "e\e[0K"
  - delay: 182
    content: "nkinsfile.yml\e[0K\e[44G"
  - delay: 693
    content: "\e[?25l\r\npipeline:\e[0K\r\n  agent:\e[0K\r\n    none:\e[0K\r\n  stages:\e[0K\r\n  - stage: \"Print Hello\"\e[0K\r\n    steps:\e[0K\r\n    - echo \"Hello, YAML world!\"\e[0K\r\n\e[0;32;92monenashev@LAPTOP-JFR-DEMO\e[0m:\e[0;34;94m/c/Users/Oleg/Documents/jenkins/jfr/jenkinsfile-runner\e[0K/\r\ndemo/pipeline-as-yaml\e[0m$ \e[0;34;94m\e[0K\e[?25h"
  - delay: 1714
    content: "\e[0mdocker run --rm \\\e[0;34;94m\e[0K\e[?25l\r\n\e[0m>     -v $(pwd)/Jenkinsfile.yml:/workspace/Jenkinsfile.yml \\\e[0K\r\n>     jenkins4eval/jenkinsfile-runner:1.0-beta-14\e[0K\e[?25h"
  - delay: 3062
    content: "\e[?25l\r\n\e[0K\e[?25h"
  - delay: 8027
    content: "\e[?25l2020-07-19 22:17:46.145+0000 [id=1]     WARNING j.branch.WorkspaceLocatorImpl#ge\e[0Kt\e[1G\e[?25h"
  - delay: 42
    content: "\e[?25l\r\nWorkspaceRoot: JENKINS-2111 path sanitization ineffective when using legacy Work\e[0Ks\r\npace Root Directory ‘/build’; switch to ‘${JENKINS_HOME}/workspace/${ITEM_FULL_N\e[0KA\r\nME}’ as in JENKINS-8446 / JENKINS-21942\e[0K\r\n\e[0K\e[?25h"
  - delay: 210
    content: "Started\e[0K\e[?25l\r\nRunning in Durability level: PERFORMANCE_OPTIMIZED\e[0K\r\n\e[0K\e[?25h"
  - delay: 1000
    content: "[Pipeline] Start of Pipeline\e[0K\e[?25l\r\n\e[0K\e[?25h"
  - delay: 2000
    content: "[Pipeline] stage\e[0K\e[?25l\r\n[Pipeline] { (Print Hello)\e[0K\r\n[Pipeline] echo\e[0K\r\nHello, YAML world!\e[0K\r\n[Pipeline] }\e[0K\r\n[Pipeline] // stage\e[0K\r\n[Pipeline] End of Pipeline\e[0K\r\nFinished: SUCCESS\e[0K\r\n\e[0K\e[?25h"
  - delay: 4000
    content: "\e[0m\e[0K" 
